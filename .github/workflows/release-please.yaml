name: Release Please

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  # Run full test suite before any release operations
  test-suite:
    uses: ./.github/workflows/test-suite.yaml

  release-please:
    runs-on: ubuntu-latest
    needs: test-suite
    if: needs.test-suite.outputs.tests_passed == 'true'
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  # Trigger appropriate publish workflows based on release type
  trigger-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.releases_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check if alpha release
        id: check_alpha
        run: |
          # Get the version from the main package
          VERSION=$(cat .release-please-manifest.json | jq -r '."."')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [[ "$VERSION" =~ [0-9]+\.[0-9]+\.[0-9]+a[0-9]+ ]]; then
            echo "is_alpha=true" >> $GITHUB_OUTPUT
            echo "Alpha version detected: $VERSION"
          else
            echo "is_alpha=false" >> $GITHUB_OUTPUT
            echo "Stable version detected: $VERSION"
          fi

      # For develop branch: trigger TestPyPI build (both alpha and stable releases go to TestPyPI from develop)
      - name: Trigger TestPyPI Build (Develop)
        if: github.ref == 'refs/heads/develop'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: ${{ steps.check_alpha.outputs.is_alpha == 'true' && 'alpha-release-created' || 'stable-release-created' }}
          client-payload: '{"version": "${{ steps.check_alpha.outputs.version }}", "releases": "${{ needs.release-please.outputs.paths_released }}"}'

      # For main branch: trigger PyPI build (both alpha and stable releases go to PyPI from main)
      - name: Trigger PyPI Build (Main)
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: ${{ steps.check_alpha.outputs.is_alpha == 'true' && 'alpha-release-created' || 'stable-release-created' }}
          client-payload: '{"version": "${{ steps.check_alpha.outputs.version }}", "releases": "${{ needs.release-please.outputs.paths_released }}"}'