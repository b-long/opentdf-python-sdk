name: 'TestPyPI Build and Publish'
description: 'Build Python package and publish to TestPyPI'
inputs:
  version:
    description: 'Version of the package being released'
    required: true
  releases:
    description: 'Paths released from release-please'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Build package
      shell: bash
      run: |
        uv build

    - name: Test import
      shell: bash
      run: |
        uv run python -c 'import otdf_python; print("Package imported successfully")'

    - name: Store version
      shell: bash
      run: |
        PROJECT_VERSION=$(uv version --short)
        echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

    # Publish with "trusted publisher" mechanism:
    # https://docs.pypi.org/trusted-publishers/
    #
    # Requires GHA token permission (above in YAML) and PyPI management:
    #   https://test.pypi.org/manage/project/otdf-python/settings/publishing/
    - name: Publish package distributions to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
            README.md,
            dist/*.whl,
            dist/*.tar.gz
        body: otdf_python version ${{ env.PROJECT_VERSION }}
        makeLatest: "false"
        tag: "${{ env.PROJECT_VERSION }}-dev-${{ github.sha }}"
        # tag: v${{ env.PROJECT_VERSION }}
