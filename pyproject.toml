[project]
name = "otdf-python"
version = "0.3.0a1"
description = "Unofficial OpenTDF SDK for Python"
readme = "README.md"
authors = [
    { name = "b-long", email = "b-long@users.noreply.github.com" }
]
requires-python = ">=3.12"
dependencies = [
    "cryptography>=45.0.4",
    "connect-python[compiler]>=0.4.2",
    "httpx>=0.28.1",
    "protobuf>=6.31.1",
    "pyjwt>=2.10.1",
    # Legacy gRPC support (may be removed in future versions)
    "grpcio>=1.74.0",
    "grpcio-tools>=1.74.0",
    "grpcio-status>=1.74.0",
    "protoc-gen-openapiv2>=0.0.1",
    "otdf-python-proto",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[dependency-groups]
dev = [
    "pydantic-settings>=2.10.1",
    "pytest>=8.4.1",
    "respx>=0.21.1",
]

[tool.pytest.ini_options]
markers = [
    "integration: mark a test as an integration test."
]

[tool.ruff]
line-length = 88

# See https://docs.astral.sh/ruff/rules/
# for rule information.
#  E501: Line too long (black enforces this for us)
lint.ignore = [
    "E501",
]
lint.select = [
    # pycodestyle checks.
    "E",
    "W",
    # pyflakes checks.
    "F",
    # flake8-bugbear checks.
    "B0",
    # flake8-comprehensions checks.
    "C4",
    # McCabe complexity
    "C90",
    # Performance-related rules
    "PERF",      # Ruff's performance rules
    # Additional useful rules
    "UP",        # pyupgrade (modern Python features)
    "SIM",       # flake8-simplify (simplifications)
    "RUF",       # Ruff-specific rules
    "FURB",      # refurb (FURB)
]

[tool.uv.workspace]
members = [
    "otdf-python-proto",
]

[tool.uv.sources]
otdf-python-proto = { workspace = true }
