# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: policy/kasregistry/key_access_server_registry.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'policy/kasregistry/key_access_server_registry.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from common import common_pb2 as common_dot_common__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from policy import objects_pb2 as policy_dot_objects__pb2
from policy import selectors_pb2 as policy_dot_selectors__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n3policy/kasregistry/key_access_server_registry.proto\x12\x12policy.kasregistry\x1a\x1b\x62uf/validate/validate.proto\x1a\x13\x63ommon/common.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x14policy/objects.proto\x1a\x16policy/selectors.proto\"\xe4\x03\n\x19GetKeyAccessServerRequest\x12\x1d\n\x02id\x18\x01 \x01(\tB\r\x18\x01\xbaH\x08r\x03\xb0\x01\x01\xd8\x01\x01R\x02id\x12!\n\x06kas_id\x18\x02 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x05kasId\x12\x1d\n\x04name\x18\x03 \x01(\tB\x07\xbaH\x04r\x02\x10\x01H\x00R\x04name\x12\x1e\n\x03uri\x18\x04 \x01(\tB\n\xbaH\x07r\x05\x10\x01\x88\x01\x01H\x00R\x03uri:\xb7\x02\xbaH\xb3\x02\x1a\xa8\x01\n\x10\x65xclusive_fields\x12JEither use deprecated \'id\' field or one of \'kas_id\' or \'uri\', but not both\x1aH!(has(this.id) && (has(this.kas_id) || has(this.uri) || has(this.name)))\x1a\x85\x01\n\x0frequired_fields\x12-Either id or one of kas_id or uri must be set\x1a\x43has(this.id) || has(this.kas_id) || has(this.uri) || has(this.name)B\x0c\n\nidentifier\"a\n\x1aGetKeyAccessServerResponse\x12\x43\n\x11key_access_server\x18\x01 \x01(\x0b\x32\x17.policy.KeyAccessServerR\x0fkeyAccessServer\"R\n\x1bListKeyAccessServersRequest\x12\x33\n\npagination\x18\n \x01(\x0b\x32\x13.policy.PageRequestR\npagination\"\x9b\x01\n\x1cListKeyAccessServersResponse\x12\x45\n\x12key_access_servers\x18\x01 \x03(\x0b\x32\x17.policy.KeyAccessServerR\x10keyAccessServers\x12\x34\n\npagination\x18\n \x01(\x0b\x32\x14.policy.PageResponseR\npagination\"\x95\x06\n\x1c\x43reateKeyAccessServerRequest\x12\x87\x02\n\x03uri\x18\x01 \x01(\tB\xf4\x01\xbaH\xf0\x01\xba\x01\xec\x01\n\nuri_format\x12\xcf\x01URI must be a valid URL (e.g., \'https://demo.com/\') followed by additional segments. Each segment must start and end with an alphanumeric character, can contain hyphens, alphanumeric characters, and slashes.\x1a\x0cthis.isUri()R\x03uri\x12\x30\n\npublic_key\x18\x02 \x01(\x0b\x32\x11.policy.PublicKeyR\tpublicKey\x12@\n\x0bsource_type\x18\x03 \x01(\x0e\x32\x12.policy.SourceTypeB\x0b\xbaH\x08\x82\x01\x02\x10\x01\xc8\x01\x00R\nsourceType\x12\xc1\x02\n\x04name\x18\x14 \x01(\tB\xac\x02\xbaH\xa8\x02r\x03\x18\xfd\x01\xba\x01\x9c\x02\n\x0fkas_name_format\x12\xb3\x01Registered KAS name must be an alphanumeric string, allowing hyphens, and underscores but not as the first or last character. The stored KAS name will be normalized to lower case.\x1aSsize(this) > 0 ? this.matches(\'^[a-zA-Z0-9](?:[a-zA-Z0-9_-]*[a-zA-Z0-9])?$\') : true\xc8\x01\x00R\x04name\x12\x33\n\x08metadata\x18\x64 \x01(\x0b\x32\x17.common.MetadataMutableR\x08metadata\"d\n\x1d\x43reateKeyAccessServerResponse\x12\x43\n\x11key_access_server\x18\x01 \x01(\x0b\x32\x17.policy.KeyAccessServerR\x0fkeyAccessServer\"\xa5\x07\n\x1cUpdateKeyAccessServerRequest\x12\x18\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\xac\x02\n\x03uri\x18\x02 \x01(\tB\x99\x02\xbaH\x95\x02\xba\x01\x91\x02\n\x13optional_uri_format\x12\xd8\x01Optional URI must be a valid URL (e.g., \'https://demo.com/\') followed by additional segments. Each segment must start and end with an alphanumeric character, can contain hyphens, alphanumeric characters, and slashes.\x1a\x1fsize(this) == 0 || this.isUri()R\x03uri\x12\x30\n\npublic_key\x18\x03 \x01(\x0b\x32\x11.policy.PublicKeyR\tpublicKey\x12@\n\x0bsource_type\x18\x04 \x01(\x0e\x32\x12.policy.SourceTypeB\x0b\xbaH\x08\x82\x01\x02\x10\x01\xc8\x01\x00R\nsourceType\x12\xbc\x02\n\x04name\x18\x14 \x01(\tB\xa7\x02\xbaH\xa3\x02r\x03\x18\xfd\x01\xba\x01\x97\x02\n\x0fkas_name_format\x12\xb3\x01Registered KAS name must be an alphanumeric string, allowing hyphens, and underscores but not as the first or last character. The stored KAS name will be normalized to lower case.\x1aNsize(this) == 0 || this.matches(\'^[a-zA-Z0-9](?:[a-zA-Z0-9_-]*[a-zA-Z0-9])?$\')\xc8\x01\x00R\x04name\x12\x33\n\x08metadata\x18\x64 \x01(\x0b\x32\x17.common.MetadataMutableR\x08metadata\x12T\n\x18metadata_update_behavior\x18\x65 \x01(\x0e\x32\x1a.common.MetadataUpdateEnumR\x16metadataUpdateBehavior\"d\n\x1dUpdateKeyAccessServerResponse\x12\x43\n\x11key_access_server\x18\x01 \x01(\x0b\x32\x17.policy.KeyAccessServerR\x0fkeyAccessServer\"8\n\x1c\x44\x65leteKeyAccessServerRequest\x12\x18\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x02id\"d\n\x1d\x44\x65leteKeyAccessServerResponse\x12\x43\n\x11key_access_server\x18\x01 \x01(\x0b\x32\x17.policy.KeyAccessServerR\x0fkeyAccessServer\"7\n\x13GrantedPolicyObject\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n\x03\x66qn\x18\x02 \x01(\tR\x03\x66qn\"\xd0\x02\n\x15KeyAccessServerGrants\x12\x43\n\x11key_access_server\x18\x01 \x01(\x0b\x32\x17.policy.KeyAccessServerR\x0fkeyAccessServer\x12R\n\x10namespace_grants\x18\x02 \x03(\x0b\x32\'.policy.kasregistry.GrantedPolicyObjectR\x0fnamespaceGrants\x12R\n\x10\x61ttribute_grants\x18\x03 \x03(\x0b\x32\'.policy.kasregistry.GrantedPolicyObjectR\x0f\x61ttributeGrants\x12J\n\x0cvalue_grants\x18\x04 \x03(\x0b\x32\'.policy.kasregistry.GrantedPolicyObjectR\x0bvalueGrants\"\x9e\x01\n\x16\x43reatePublicKeyRequest\x12\x1f\n\x06kas_id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x05kasId\x12.\n\x03key\x18\x02 \x01(\x0b\x32\x14.policy.KasPublicKeyB\x06\xbaH\x03\xc8\x01\x01R\x03key\x12\x33\n\x08metadata\x18\x64 \x01(\x0b\x32\x17.common.MetadataMutableR\x08metadata\"8\n\x17\x43reatePublicKeyResponse\x12\x1d\n\x03key\x18\x01 \x01(\x0b\x32\x0b.policy.KeyR\x03key\"?\n\x13GetPublicKeyRequest\x12\x1a\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x02idB\x0c\n\nidentifier\"5\n\x14GetPublicKeyResponse\x12\x1d\n\x03key\x18\x01 \x01(\x0b\x32\x0b.policy.KeyR\x03key\"\xca\x01\n\x15ListPublicKeysRequest\x12!\n\x06kas_id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x05kasId\x12$\n\x08kas_name\x18\x02 \x01(\tB\x07\xbaH\x04r\x02\x10\x01H\x00R\x07kasName\x12%\n\x07kas_uri\x18\x03 \x01(\tB\n\xbaH\x07r\x05\x10\x01\x88\x01\x01H\x00R\x06kasUri\x12\x33\n\npagination\x18\n \x01(\x0b\x32\x13.policy.PageRequestR\npaginationB\x0c\n\nkas_filter\"o\n\x16ListPublicKeysResponse\x12\x1f\n\x04keys\x18\x01 \x03(\x0b\x32\x0b.policy.KeyR\x04keys\x12\x34\n\npagination\x18\n \x01(\x0b\x32\x14.policy.PageResponseR\npagination\"\x81\x02\n\x1bListPublicKeyMappingRequest\x12!\n\x06kas_id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x05kasId\x12$\n\x08kas_name\x18\x02 \x01(\tB\x07\xbaH\x04r\x02\x10\x01H\x00R\x07kasName\x12%\n\x07kas_uri\x18\x03 \x01(\tB\n\xbaH\x07r\x05\x10\x01\x88\x01\x01H\x00R\x06kasUri\x12/\n\rpublic_key_id\x18\x04 \x01(\tB\x0b\xbaH\x08r\x03\xb0\x01\x01\xd8\x01\x01R\x0bpublicKeyId\x12\x33\n\npagination\x18\n \x01(\x0b\x32\x13.policy.PageRequestR\npaginationB\x0c\n\nkas_filter\"\xf6\x05\n\x1cListPublicKeyMappingResponse\x12q\n\x13public_key_mappings\x18\x01 \x03(\x0b\x32\x41.policy.kasregistry.ListPublicKeyMappingResponse.PublicKeyMappingR\x11publicKeyMappings\x12\x34\n\npagination\x18\n \x01(\x0b\x32\x14.policy.PageResponseR\npagination\x1a\xba\x01\n\x10PublicKeyMapping\x12\x15\n\x06kas_id\x18\x02 \x01(\tR\x05kasId\x12\x19\n\x08kas_name\x18\x03 \x01(\tR\x07kasName\x12\x17\n\x07kas_uri\x18\x04 \x01(\tR\x06kasUri\x12[\n\x0bpublic_keys\x18\x05 \x03(\x0b\x32:.policy.kasregistry.ListPublicKeyMappingResponse.PublicKeyR\npublicKeys\x1a\xbe\x02\n\tPublicKey\x12\x1d\n\x03key\x18\x01 \x01(\x0b\x32\x0b.policy.KeyR\x03key\x12T\n\x06values\x18\x06 \x03(\x0b\x32<.policy.kasregistry.ListPublicKeyMappingResponse.AssociationR\x06values\x12^\n\x0b\x64\x65\x66initions\x18\x07 \x03(\x0b\x32<.policy.kasregistry.ListPublicKeyMappingResponse.AssociationR\x0b\x64\x65\x66initions\x12\\\n\nnamespaces\x18\x08 \x03(\x0b\x32<.policy.kasregistry.ListPublicKeyMappingResponse.AssociationR\nnamespaces\x1a/\n\x0b\x41ssociation\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n\x03\x66qn\x18\x02 \x01(\tR\x03\x66qn\"\xbd\x01\n\x16UpdatePublicKeyRequest\x12\x18\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x33\n\x08metadata\x18\x64 \x01(\x0b\x32\x17.common.MetadataMutableR\x08metadata\x12T\n\x18metadata_update_behavior\x18\x65 \x01(\x0e\x32\x1a.common.MetadataUpdateEnumR\x16metadataUpdateBehavior\"8\n\x17UpdatePublicKeyResponse\x12\x1d\n\x03key\x18\x01 \x01(\x0b\x32\x0b.policy.KeyR\x03key\"6\n\x1a\x44\x65\x61\x63tivatePublicKeyRequest\x12\x18\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x02id\"<\n\x1b\x44\x65\x61\x63tivatePublicKeyResponse\x12\x1d\n\x03key\x18\x01 \x01(\x0b\x32\x0b.policy.KeyR\x03key\"4\n\x18\x41\x63tivatePublicKeyRequest\x12\x18\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x02id\":\n\x19\x41\x63tivatePublicKeyResponse\x12\x1d\n\x03key\x18\x01 \x01(\x0b\x32\x0b.policy.KeyR\x03key\"\xa5\x07\n ListKeyAccessServerGrantsRequest\x12\xcb\x01\n\x06kas_id\x18\x01 \x01(\tB\xb3\x01\xbaH\xaf\x01\xba\x01\xab\x01\n\x14optional_uuid_format\x12#Optional field must be a valid UUID\x1ansize(this) == 0 || this.matches(\'[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\')R\x05kasId\x12\xb3\x02\n\x07kas_uri\x18\x02 \x01(\tB\x99\x02\xbaH\x95\x02\xba\x01\x91\x02\n\x13optional_uri_format\x12\xd8\x01Optional URI must be a valid URL (e.g., \'https://demo.com/\') followed by additional segments. Each segment must start and end with an alphanumeric character, can contain hyphens, alphanumeric characters, and slashes.\x1a\x1fsize(this) == 0 || this.isUri()R\x06kasUri\x12\xc3\x02\n\x08kas_name\x18\x03 \x01(\tB\xa7\x02\xbaH\xa3\x02r\x03\x18\xfd\x01\xba\x01\x97\x02\n\x0fkas_name_format\x12\xb3\x01Registered KAS name must be an alphanumeric string, allowing hyphens, and underscores but not as the first or last character. The stored KAS name will be normalized to lower case.\x1aNsize(this) == 0 || this.matches(\'^[a-zA-Z0-9](?:[a-zA-Z0-9_-]*[a-zA-Z0-9])?$\')\xc8\x01\x00R\x07kasName\x12\x33\n\npagination\x18\n \x01(\x0b\x32\x13.policy.PageRequestR\npagination:\x02\x18\x01\"\xa4\x01\n!ListKeyAccessServerGrantsResponse\x12\x45\n\x06grants\x18\x01 \x03(\x0b\x32).policy.kasregistry.KeyAccessServerGrantsB\x02\x18\x01R\x06grants\x12\x34\n\npagination\x18\n \x01(\x0b\x32\x14.policy.PageResponseR\npagination:\x02\x18\x01\"\xb1\x0c\n\x10\x43reateKeyRequest\x12\x1f\n\x06kas_id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x05kasId\x12\x1e\n\x06key_id\x18\x02 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x05keyId\x12\xa1\x01\n\rkey_algorithm\x18\x03 \x01(\x0e\x32\x11.policy.AlgorithmBi\xbaHf\xba\x01\x63\n\x15key_algorithm_defined\x12\x34The key_algorithm must be one of the defined values.\x1a\x14this in [1, 2, 3, 4]R\x0ckeyAlgorithm\x12\x93\x01\n\x08key_mode\x18\x04 \x01(\x0e\x32\x0f.policy.KeyModeBg\xbaHd\xba\x01\x61\n\x10key_mode_defined\x12\x35The key_mode must be one of the defined values (1-4).\x1a\x16this >= 1 && this <= 4R\x07keyMode\x12\x42\n\x0epublic_key_ctx\x18\x05 \x01(\x0b\x32\x14.policy.PublicKeyCtxB\x06\xbaH\x03\xc8\x01\x01R\x0cpublicKeyCtx\x12=\n\x0fprivate_key_ctx\x18\x06 \x01(\x0b\x32\x15.policy.PrivateKeyCtxR\rprivateKeyCtx\x12,\n\x12provider_config_id\x18\x07 \x01(\tR\x10providerConfigId\x12\x33\n\x08metadata\x18\x64 \x01(\x0b\x32\x17.common.MetadataMutableR\x08metadata:\xbb\x07\xbaH\xb7\x07\x1a\x97\x03\n#private_key_ctx_optionally_required\x12\xbc\x01The wrapped_key is required if key_mode is KEY_MODE_CONFIG_ROOT_KEY or KEY_MODE_PROVIDER_ROOT_KEY. The wrapped_key must be empty if key_mode is KEY_MODE_REMOTE or KEY_MODE_PUBLIC_KEY_ONLY.\x1a\xb0\x01((this.key_mode == 1 || this.key_mode == 2) && this.private_key_ctx.wrapped_key != \'\') || ((this.key_mode == 3 || this.key_mode == 4) && this.private_key_ctx.wrapped_key == \'\')\x1a\xf4\x02\n&provider_config_id_optionally_required\x12\xa8\x01Provider config id is required if key_mode is KEY_MODE_PROVIDER_ROOT_KEY or KEY_MODE_REMOTE. It must be empty for KEY_MODE_CONFIG_ROOT_KEY and KEY_MODE_PUBLIC_KEY_ONLY.\x1a\x9e\x01((this.key_mode == 1 || this.key_mode == 4) && this.provider_config_id == \'\') || ((this.key_mode == 2 || this.key_mode == 3) && this.provider_config_id != \'\')\x1a\xa3\x01\n#private_key_ctx_for_public_key_only\x12Hprivate_key_ctx must not be set if key_mode is KEY_MODE_PUBLIC_KEY_ONLY.\x1a\x32!(this.key_mode == 4 && has(this.private_key_ctx))\"<\n\x11\x43reateKeyResponse\x12\'\n\x07kas_key\x18\x01 \x01(\x0b\x32\x0e.policy.KasKeyR\x06kasKey\"z\n\rGetKeyRequest\x12\x1a\n\x02id\x18\x02 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x02id\x12\x38\n\x03key\x18\x03 \x01(\x0b\x32$.policy.kasregistry.KasKeyIdentifierH\x00R\x03keyB\x13\n\nidentifier\x12\x05\xbaH\x02\x08\x01\"9\n\x0eGetKeyResponse\x12\'\n\x07kas_key\x18\x01 \x01(\x0b\x32\x0e.policy.KasKeyR\x06kasKey\"\xeb\x02\n\x0fListKeysRequest\x12\xa4\x01\n\rkey_algorithm\x18\x01 \x01(\x0e\x32\x11.policy.AlgorithmBl\xbaHi\xba\x01\x66\n\x15key_algorithm_defined\x12\x34The key_algorithm must be one of the defined values.\x1a\x17this in [0, 1, 2, 3, 4]R\x0ckeyAlgorithm\x12!\n\x06kas_id\x18\x02 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x05kasId\x12$\n\x08kas_name\x18\x03 \x01(\tB\x07\xbaH\x04r\x02\x10\x01H\x00R\x07kasName\x12%\n\x07kas_uri\x18\x04 \x01(\tB\n\xbaH\x07r\x05\x10\x01\x88\x01\x01H\x00R\x06kasUri\x12\x33\n\npagination\x18\n \x01(\x0b\x32\x13.policy.PageRequestR\npaginationB\x0c\n\nkas_filter\"s\n\x10ListKeysResponse\x12)\n\x08kas_keys\x18\x01 \x03(\x0b\x32\x0e.policy.KasKeyR\x07kasKeys\x12\x34\n\npagination\x18\n \x01(\x0b\x32\x14.policy.PageResponseR\npagination\"\x86\x03\n\x10UpdateKeyRequest\x12\x18\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x33\n\x08metadata\x18\x64 \x01(\x0b\x32\x17.common.MetadataMutableR\x08metadata\x12T\n\x18metadata_update_behavior\x18\x65 \x01(\x0e\x32\x1a.common.MetadataUpdateEnumR\x16metadataUpdateBehavior:\xcc\x01\xbaH\xc8\x01\x1a\xc5\x01\n\x18metadata_update_behavior\x12RMetadata update behavior must be either APPEND or REPLACE, when updating metadata.\x1aU((!has(this.metadata)) || (has(this.metadata) && this.metadata_update_behavior != 0))\"<\n\x11UpdateKeyResponse\x12\'\n\x07kas_key\x18\x01 \x01(\x0b\x32\x0e.policy.KasKeyR\x06kasKey\"\xa4\x01\n\x10KasKeyIdentifier\x12!\n\x06kas_id\x18\x02 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x05kasId\x12\x1d\n\x04name\x18\x03 \x01(\tB\x07\xbaH\x04r\x02\x10\x01H\x00R\x04name\x12\x1e\n\x03uri\x18\x04 \x01(\tB\n\xbaH\x07r\x05\x10\x01\x88\x01\x01H\x00R\x03uri\x12\x19\n\x03kid\x18\x05 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x03kidB\x13\n\nidentifier\x12\x05\xbaH\x02\x08\x01\"\xe2\x0e\n\x10RotateKeyRequest\x12\x1a\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x02id\x12\x38\n\x03key\x18\x02 \x01(\x0b\x32$.policy.kasregistry.KasKeyIdentifierH\x00R\x03key\x12\x44\n\x07new_key\x18\x03 \x01(\x0b\x32+.policy.kasregistry.RotateKeyRequest.NewKeyR\x06newKey\x1a\xcc\x04\n\x06NewKey\x12\x1e\n\x06key_id\x18\x01 \x01(\tB\x07\xbaH\x04r\x02\x10\x01R\x05keyId\x12\x9a\x01\n\talgorithm\x18\x02 \x01(\x0e\x32\x11.policy.AlgorithmBi\xbaHf\xba\x01\x63\n\x15key_algorithm_defined\x12\x34The key_algorithm must be one of the defined values.\x1a\x14this in [1, 2, 3, 4]R\talgorithm\x12\x9e\x01\n\x08key_mode\x18\x03 \x01(\x0e\x32\x0f.policy.KeyModeBr\xbaHo\x82\x01\x02\x10\x01\xba\x01g\n\x14new_key_mode_defined\x12\x39The new key_mode must be one of the defined values (1-4).\x1a\x14this in [1, 2, 3, 4]R\x07keyMode\x12\x42\n\x0epublic_key_ctx\x18\x04 \x01(\x0b\x32\x14.policy.PublicKeyCtxB\x06\xbaH\x03\xc8\x01\x01R\x0cpublicKeyCtx\x12=\n\x0fprivate_key_ctx\x18\x05 \x01(\x0b\x32\x15.policy.PrivateKeyCtxR\rprivateKeyCtx\x12,\n\x12provider_config_id\x18\x06 \x01(\tR\x10providerConfigId\x12\x33\n\x08metadata\x18\x64 \x01(\x0b\x32\x17.common.MetadataMutableR\x08metadata:\xcd\x08\xbaH\xc9\x08\x1a\xd8\x03\n#private_key_ctx_optionally_required\x12\xcd\x01\x46or the new key, the wrapped_key is required if key_mode is KEY_MODE_CONFIG_ROOT_KEY or KEY_MODE_PROVIDER_ROOT_KEY. The wrapped_key must be empty if key_mode is KEY_MODE_REMOTE or KEY_MODE_PUBLIC_KEY_ONLY.\x1a\xe0\x01((this.new_key.key_mode == 1 || this.new_key.key_mode == 2) && this.new_key.private_key_ctx.wrapped_key != \'\') || ((this.new_key.key_mode == 3 || this.new_key.key_mode == 4) && this.new_key.private_key_ctx.wrapped_key == \'\')\x1a\xb5\x03\n&provider_config_id_optionally_required\x12\xb9\x01\x46or the new key, provider config id is required if key_mode is KEY_MODE_PROVIDER_ROOT_KEY or KEY_MODE_REMOTE. It must be empty for KEY_MODE_CONFIG_ROOT_KEY and KEY_MODE_PUBLIC_KEY_ONLY.\x1a\xce\x01((this.new_key.key_mode == 1 || this.new_key.key_mode == 4) && this.new_key.provider_config_id == \'\') || ((this.new_key.key_mode == 2 || this.new_key.key_mode == 3) && this.new_key.provider_config_id != \'\')\x1a\xb3\x01\n#private_key_ctx_for_public_key_only\x12Hprivate_key_ctx must not be set if key_mode is KEY_MODE_PUBLIC_KEY_ONLY.\x1a\x42!(this.new_key.key_mode == 4 && has(this.new_key.private_key_ctx))B\x13\n\nactive_key\x12\x05\xbaH\x02\x08\x01\"2\n\x0e\x43hangeMappings\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n\x03\x66qn\x18\x02 \x01(\tR\x03\x66qn\"\xe3\x02\n\x10RotatedResources\x12\x36\n\x0frotated_out_key\x18\x01 \x01(\x0b\x32\x0e.policy.KasKeyR\rrotatedOutKey\x12\x66\n\x1d\x61ttribute_definition_mappings\x18\x02 \x03(\x0b\x32\".policy.kasregistry.ChangeMappingsR\x1b\x61ttributeDefinitionMappings\x12\\\n\x18\x61ttribute_value_mappings\x18\x03 \x03(\x0b\x32\".policy.kasregistry.ChangeMappingsR\x16\x61ttributeValueMappings\x12Q\n\x12namespace_mappings\x18\x04 \x03(\x0b\x32\".policy.kasregistry.ChangeMappingsR\x11namespaceMappings\"\x8f\x01\n\x11RotateKeyResponse\x12\'\n\x07kas_key\x18\x01 \x01(\x0b\x32\x0e.policy.KasKeyR\x06kasKey\x12Q\n\x11rotated_resources\x18\x02 \x01(\x0b\x32$.policy.kasregistry.RotatedResourcesR\x10rotatedResources\"~\n\x11SetBaseKeyRequest\x12\x1a\n\x02id\x18\x01 \x01(\tB\x08\xbaH\x05r\x03\xb0\x01\x01H\x00R\x02id\x12\x38\n\x03key\x18\x02 \x01(\x0b\x32$.policy.kasregistry.KasKeyIdentifierH\x00R\x03keyB\x13\n\nactive_key\x12\x05\xbaH\x02\x08\x01\"\x13\n\x11GetBaseKeyRequest\"E\n\x12GetBaseKeyResponse\x12/\n\x08\x62\x61se_key\x18\x01 \x01(\x0b\x32\x14.policy.SimpleKasKeyR\x07\x62\x61seKey\"\x8e\x01\n\x12SetBaseKeyResponse\x12\x36\n\x0cnew_base_key\x18\x01 \x01(\x0b\x32\x14.policy.SimpleKasKeyR\nnewBaseKey\x12@\n\x11previous_base_key\x18\x02 \x01(\x0b\x32\x14.policy.SimpleKasKeyR\x0fpreviousBaseKey2\xc7\x0b\n\x1eKeyAccessServerRegistryService\x12\x99\x01\n\x14ListKeyAccessServers\x12/.policy.kasregistry.ListKeyAccessServersRequest\x1a\x30.policy.kasregistry.ListKeyAccessServersResponse\"\x1e\x90\x02\x01\x82\xd3\xe4\x93\x02\x15\x12\x13/key-access-servers\x12x\n\x12GetKeyAccessServer\x12-.policy.kasregistry.GetKeyAccessServerRequest\x1a..policy.kasregistry.GetKeyAccessServerResponse\"\x03\x90\x02\x01\x12~\n\x15\x43reateKeyAccessServer\x12\x30.policy.kasregistry.CreateKeyAccessServerRequest\x1a\x31.policy.kasregistry.CreateKeyAccessServerResponse\"\x00\x12~\n\x15UpdateKeyAccessServer\x12\x30.policy.kasregistry.UpdateKeyAccessServerRequest\x1a\x31.policy.kasregistry.UpdateKeyAccessServerResponse\"\x00\x12~\n\x15\x44\x65leteKeyAccessServer\x12\x30.policy.kasregistry.DeleteKeyAccessServerRequest\x1a\x31.policy.kasregistry.DeleteKeyAccessServerResponse\"\x00\x12\x90\x01\n\x19ListKeyAccessServerGrants\x12\x34.policy.kasregistry.ListKeyAccessServerGrantsRequest\x1a\x35.policy.kasregistry.ListKeyAccessServerGrantsResponse\"\x06\x88\x02\x01\x90\x02\x01\x12Z\n\tCreateKey\x12$.policy.kasregistry.CreateKeyRequest\x1a%.policy.kasregistry.CreateKeyResponse\"\x00\x12Q\n\x06GetKey\x12!.policy.kasregistry.GetKeyRequest\x1a\".policy.kasregistry.GetKeyResponse\"\x00\x12W\n\x08ListKeys\x12#.policy.kasregistry.ListKeysRequest\x1a$.policy.kasregistry.ListKeysResponse\"\x00\x12Z\n\tUpdateKey\x12$.policy.kasregistry.UpdateKeyRequest\x1a%.policy.kasregistry.UpdateKeyResponse\"\x00\x12Z\n\tRotateKey\x12$.policy.kasregistry.RotateKeyRequest\x1a%.policy.kasregistry.RotateKeyResponse\"\x00\x12]\n\nSetBaseKey\x12%.policy.kasregistry.SetBaseKeyRequest\x1a&.policy.kasregistry.SetBaseKeyResponse\"\x00\x12]\n\nGetBaseKey\x12%.policy.kasregistry.GetBaseKeyRequest\x1a&.policy.kasregistry.GetBaseKeyResponse\"\x00\x42\x9f\x01\n\x16\x63om.policy.kasregistryB\x1cKeyAccessServerRegistryProtoP\x01\xa2\x02\x03PKX\xaa\x02\x12Policy.Kasregistry\xca\x02\x12Policy\\Kasregistry\xe2\x02\x1ePolicy\\Kasregistry\\GPBMetadata\xea\x02\x13Policy::Kasregistryb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'policy.kasregistry.key_access_server_registry_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\026com.policy.kasregistryB\034KeyAccessServerRegistryProtoP\001\242\002\003PKX\252\002\022Policy.Kasregistry\312\002\022Policy\\Kasregistry\342\002\036Policy\\Kasregistry\\GPBMetadata\352\002\023Policy::Kasregistry'
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['id']._serialized_options = b'\030\001\272H\010r\003\260\001\001\330\001\001'
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['kas_id']._loaded_options = None
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['kas_id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['name']._loaded_options = None
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['name']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['uri']._loaded_options = None
  _globals['_GETKEYACCESSSERVERREQUEST'].fields_by_name['uri']._serialized_options = b'\272H\007r\005\020\001\210\001\001'
  _globals['_GETKEYACCESSSERVERREQUEST']._loaded_options = None
  _globals['_GETKEYACCESSSERVERREQUEST']._serialized_options = b'\272H\263\002\032\250\001\n\020exclusive_fields\022JEither use deprecated \'id\' field or one of \'kas_id\' or \'uri\', but not both\032H!(has(this.id) && (has(this.kas_id) || has(this.uri) || has(this.name)))\032\205\001\n\017required_fields\022-Either id or one of kas_id or uri must be set\032Chas(this.id) || has(this.kas_id) || has(this.uri) || has(this.name)'
  _globals['_CREATEKEYACCESSSERVERREQUEST'].fields_by_name['uri']._loaded_options = None
  _globals['_CREATEKEYACCESSSERVERREQUEST'].fields_by_name['uri']._serialized_options = b'\272H\360\001\272\001\354\001\n\nuri_format\022\317\001URI must be a valid URL (e.g., \'https://demo.com/\') followed by additional segments. Each segment must start and end with an alphanumeric character, can contain hyphens, alphanumeric characters, and slashes.\032\014this.isUri()'
  _globals['_CREATEKEYACCESSSERVERREQUEST'].fields_by_name['source_type']._loaded_options = None
  _globals['_CREATEKEYACCESSSERVERREQUEST'].fields_by_name['source_type']._serialized_options = b'\272H\010\202\001\002\020\001\310\001\000'
  _globals['_CREATEKEYACCESSSERVERREQUEST'].fields_by_name['name']._loaded_options = None
  _globals['_CREATEKEYACCESSSERVERREQUEST'].fields_by_name['name']._serialized_options = b'\272H\250\002r\003\030\375\001\272\001\234\002\n\017kas_name_format\022\263\001Registered KAS name must be an alphanumeric string, allowing hyphens, and underscores but not as the first or last character. The stored KAS name will be normalized to lower case.\032Ssize(this) > 0 ? this.matches(\'^[a-zA-Z0-9](?:[a-zA-Z0-9_-]*[a-zA-Z0-9])?$\') : true\310\001\000'
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['uri']._loaded_options = None
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['uri']._serialized_options = b'\272H\225\002\272\001\221\002\n\023optional_uri_format\022\330\001Optional URI must be a valid URL (e.g., \'https://demo.com/\') followed by additional segments. Each segment must start and end with an alphanumeric character, can contain hyphens, alphanumeric characters, and slashes.\032\037size(this) == 0 || this.isUri()'
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['source_type']._loaded_options = None
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['source_type']._serialized_options = b'\272H\010\202\001\002\020\001\310\001\000'
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['name']._loaded_options = None
  _globals['_UPDATEKEYACCESSSERVERREQUEST'].fields_by_name['name']._serialized_options = b'\272H\243\002r\003\030\375\001\272\001\227\002\n\017kas_name_format\022\263\001Registered KAS name must be an alphanumeric string, allowing hyphens, and underscores but not as the first or last character. The stored KAS name will be normalized to lower case.\032Nsize(this) == 0 || this.matches(\'^[a-zA-Z0-9](?:[a-zA-Z0-9_-]*[a-zA-Z0-9])?$\')\310\001\000'
  _globals['_DELETEKEYACCESSSERVERREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_DELETEKEYACCESSSERVERREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_CREATEPUBLICKEYREQUEST'].fields_by_name['kas_id']._loaded_options = None
  _globals['_CREATEPUBLICKEYREQUEST'].fields_by_name['kas_id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_CREATEPUBLICKEYREQUEST'].fields_by_name['key']._loaded_options = None
  _globals['_CREATEPUBLICKEYREQUEST'].fields_by_name['key']._serialized_options = b'\272H\003\310\001\001'
  _globals['_GETPUBLICKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_GETPUBLICKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_LISTPUBLICKEYSREQUEST'].fields_by_name['kas_id']._loaded_options = None
  _globals['_LISTPUBLICKEYSREQUEST'].fields_by_name['kas_id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_LISTPUBLICKEYSREQUEST'].fields_by_name['kas_name']._loaded_options = None
  _globals['_LISTPUBLICKEYSREQUEST'].fields_by_name['kas_name']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_LISTPUBLICKEYSREQUEST'].fields_by_name['kas_uri']._loaded_options = None
  _globals['_LISTPUBLICKEYSREQUEST'].fields_by_name['kas_uri']._serialized_options = b'\272H\007r\005\020\001\210\001\001'
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['kas_id']._loaded_options = None
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['kas_id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['kas_name']._loaded_options = None
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['kas_name']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['kas_uri']._loaded_options = None
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['kas_uri']._serialized_options = b'\272H\007r\005\020\001\210\001\001'
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['public_key_id']._loaded_options = None
  _globals['_LISTPUBLICKEYMAPPINGREQUEST'].fields_by_name['public_key_id']._serialized_options = b'\272H\010r\003\260\001\001\330\001\001'
  _globals['_UPDATEPUBLICKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_UPDATEPUBLICKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_DEACTIVATEPUBLICKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_DEACTIVATEPUBLICKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_ACTIVATEPUBLICKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_ACTIVATEPUBLICKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST'].fields_by_name['kas_id']._loaded_options = None
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST'].fields_by_name['kas_id']._serialized_options = b'\272H\257\001\272\001\253\001\n\024optional_uuid_format\022#Optional field must be a valid UUID\032nsize(this) == 0 || this.matches(\'[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\')'
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST'].fields_by_name['kas_uri']._loaded_options = None
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST'].fields_by_name['kas_uri']._serialized_options = b'\272H\225\002\272\001\221\002\n\023optional_uri_format\022\330\001Optional URI must be a valid URL (e.g., \'https://demo.com/\') followed by additional segments. Each segment must start and end with an alphanumeric character, can contain hyphens, alphanumeric characters, and slashes.\032\037size(this) == 0 || this.isUri()'
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST'].fields_by_name['kas_name']._loaded_options = None
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST'].fields_by_name['kas_name']._serialized_options = b'\272H\243\002r\003\030\375\001\272\001\227\002\n\017kas_name_format\022\263\001Registered KAS name must be an alphanumeric string, allowing hyphens, and underscores but not as the first or last character. The stored KAS name will be normalized to lower case.\032Nsize(this) == 0 || this.matches(\'^[a-zA-Z0-9](?:[a-zA-Z0-9_-]*[a-zA-Z0-9])?$\')\310\001\000'
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST']._loaded_options = None
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST']._serialized_options = b'\030\001'
  _globals['_LISTKEYACCESSSERVERGRANTSRESPONSE'].fields_by_name['grants']._loaded_options = None
  _globals['_LISTKEYACCESSSERVERGRANTSRESPONSE'].fields_by_name['grants']._serialized_options = b'\030\001'
  _globals['_LISTKEYACCESSSERVERGRANTSRESPONSE']._loaded_options = None
  _globals['_LISTKEYACCESSSERVERGRANTSRESPONSE']._serialized_options = b'\030\001'
  _globals['_CREATEKEYREQUEST'].fields_by_name['kas_id']._loaded_options = None
  _globals['_CREATEKEYREQUEST'].fields_by_name['kas_id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_CREATEKEYREQUEST'].fields_by_name['key_id']._loaded_options = None
  _globals['_CREATEKEYREQUEST'].fields_by_name['key_id']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_CREATEKEYREQUEST'].fields_by_name['key_algorithm']._loaded_options = None
  _globals['_CREATEKEYREQUEST'].fields_by_name['key_algorithm']._serialized_options = b'\272Hf\272\001c\n\025key_algorithm_defined\0224The key_algorithm must be one of the defined values.\032\024this in [1, 2, 3, 4]'
  _globals['_CREATEKEYREQUEST'].fields_by_name['key_mode']._loaded_options = None
  _globals['_CREATEKEYREQUEST'].fields_by_name['key_mode']._serialized_options = b'\272Hd\272\001a\n\020key_mode_defined\0225The key_mode must be one of the defined values (1-4).\032\026this >= 1 && this <= 4'
  _globals['_CREATEKEYREQUEST'].fields_by_name['public_key_ctx']._loaded_options = None
  _globals['_CREATEKEYREQUEST'].fields_by_name['public_key_ctx']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CREATEKEYREQUEST']._loaded_options = None
  _globals['_CREATEKEYREQUEST']._serialized_options = b'\272H\267\007\032\227\003\n#private_key_ctx_optionally_required\022\274\001The wrapped_key is required if key_mode is KEY_MODE_CONFIG_ROOT_KEY or KEY_MODE_PROVIDER_ROOT_KEY. The wrapped_key must be empty if key_mode is KEY_MODE_REMOTE or KEY_MODE_PUBLIC_KEY_ONLY.\032\260\001((this.key_mode == 1 || this.key_mode == 2) && this.private_key_ctx.wrapped_key != \'\') || ((this.key_mode == 3 || this.key_mode == 4) && this.private_key_ctx.wrapped_key == \'\')\032\364\002\n&provider_config_id_optionally_required\022\250\001Provider config id is required if key_mode is KEY_MODE_PROVIDER_ROOT_KEY or KEY_MODE_REMOTE. It must be empty for KEY_MODE_CONFIG_ROOT_KEY and KEY_MODE_PUBLIC_KEY_ONLY.\032\236\001((this.key_mode == 1 || this.key_mode == 4) && this.provider_config_id == \'\') || ((this.key_mode == 2 || this.key_mode == 3) && this.provider_config_id != \'\')\032\243\001\n#private_key_ctx_for_public_key_only\022Hprivate_key_ctx must not be set if key_mode is KEY_MODE_PUBLIC_KEY_ONLY.\0322!(this.key_mode == 4 && has(this.private_key_ctx))'
  _globals['_GETKEYREQUEST'].oneofs_by_name['identifier']._loaded_options = None
  _globals['_GETKEYREQUEST'].oneofs_by_name['identifier']._serialized_options = b'\272H\002\010\001'
  _globals['_GETKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_GETKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_LISTKEYSREQUEST'].fields_by_name['key_algorithm']._loaded_options = None
  _globals['_LISTKEYSREQUEST'].fields_by_name['key_algorithm']._serialized_options = b'\272Hi\272\001f\n\025key_algorithm_defined\0224The key_algorithm must be one of the defined values.\032\027this in [0, 1, 2, 3, 4]'
  _globals['_LISTKEYSREQUEST'].fields_by_name['kas_id']._loaded_options = None
  _globals['_LISTKEYSREQUEST'].fields_by_name['kas_id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_LISTKEYSREQUEST'].fields_by_name['kas_name']._loaded_options = None
  _globals['_LISTKEYSREQUEST'].fields_by_name['kas_name']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_LISTKEYSREQUEST'].fields_by_name['kas_uri']._loaded_options = None
  _globals['_LISTKEYSREQUEST'].fields_by_name['kas_uri']._serialized_options = b'\272H\007r\005\020\001\210\001\001'
  _globals['_UPDATEKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_UPDATEKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_UPDATEKEYREQUEST']._loaded_options = None
  _globals['_UPDATEKEYREQUEST']._serialized_options = b'\272H\310\001\032\305\001\n\030metadata_update_behavior\022RMetadata update behavior must be either APPEND or REPLACE, when updating metadata.\032U((!has(this.metadata)) || (has(this.metadata) && this.metadata_update_behavior != 0))'
  _globals['_KASKEYIDENTIFIER'].oneofs_by_name['identifier']._loaded_options = None
  _globals['_KASKEYIDENTIFIER'].oneofs_by_name['identifier']._serialized_options = b'\272H\002\010\001'
  _globals['_KASKEYIDENTIFIER'].fields_by_name['kas_id']._loaded_options = None
  _globals['_KASKEYIDENTIFIER'].fields_by_name['kas_id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_KASKEYIDENTIFIER'].fields_by_name['name']._loaded_options = None
  _globals['_KASKEYIDENTIFIER'].fields_by_name['name']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_KASKEYIDENTIFIER'].fields_by_name['uri']._loaded_options = None
  _globals['_KASKEYIDENTIFIER'].fields_by_name['uri']._serialized_options = b'\272H\007r\005\020\001\210\001\001'
  _globals['_KASKEYIDENTIFIER'].fields_by_name['kid']._loaded_options = None
  _globals['_KASKEYIDENTIFIER'].fields_by_name['kid']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['key_id']._loaded_options = None
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['key_id']._serialized_options = b'\272H\004r\002\020\001'
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['algorithm']._loaded_options = None
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['algorithm']._serialized_options = b'\272Hf\272\001c\n\025key_algorithm_defined\0224The key_algorithm must be one of the defined values.\032\024this in [1, 2, 3, 4]'
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['key_mode']._loaded_options = None
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['key_mode']._serialized_options = b'\272Ho\202\001\002\020\001\272\001g\n\024new_key_mode_defined\0229The new key_mode must be one of the defined values (1-4).\032\024this in [1, 2, 3, 4]'
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['public_key_ctx']._loaded_options = None
  _globals['_ROTATEKEYREQUEST_NEWKEY'].fields_by_name['public_key_ctx']._serialized_options = b'\272H\003\310\001\001'
  _globals['_ROTATEKEYREQUEST'].oneofs_by_name['active_key']._loaded_options = None
  _globals['_ROTATEKEYREQUEST'].oneofs_by_name['active_key']._serialized_options = b'\272H\002\010\001'
  _globals['_ROTATEKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_ROTATEKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_ROTATEKEYREQUEST']._loaded_options = None
  _globals['_ROTATEKEYREQUEST']._serialized_options = b'\272H\311\010\032\330\003\n#private_key_ctx_optionally_required\022\315\001For the new key, the wrapped_key is required if key_mode is KEY_MODE_CONFIG_ROOT_KEY or KEY_MODE_PROVIDER_ROOT_KEY. The wrapped_key must be empty if key_mode is KEY_MODE_REMOTE or KEY_MODE_PUBLIC_KEY_ONLY.\032\340\001((this.new_key.key_mode == 1 || this.new_key.key_mode == 2) && this.new_key.private_key_ctx.wrapped_key != \'\') || ((this.new_key.key_mode == 3 || this.new_key.key_mode == 4) && this.new_key.private_key_ctx.wrapped_key == \'\')\032\265\003\n&provider_config_id_optionally_required\022\271\001For the new key, provider config id is required if key_mode is KEY_MODE_PROVIDER_ROOT_KEY or KEY_MODE_REMOTE. It must be empty for KEY_MODE_CONFIG_ROOT_KEY and KEY_MODE_PUBLIC_KEY_ONLY.\032\316\001((this.new_key.key_mode == 1 || this.new_key.key_mode == 4) && this.new_key.provider_config_id == \'\') || ((this.new_key.key_mode == 2 || this.new_key.key_mode == 3) && this.new_key.provider_config_id != \'\')\032\263\001\n#private_key_ctx_for_public_key_only\022Hprivate_key_ctx must not be set if key_mode is KEY_MODE_PUBLIC_KEY_ONLY.\032B!(this.new_key.key_mode == 4 && has(this.new_key.private_key_ctx))'
  _globals['_SETBASEKEYREQUEST'].oneofs_by_name['active_key']._loaded_options = None
  _globals['_SETBASEKEYREQUEST'].oneofs_by_name['active_key']._serialized_options = b'\272H\002\010\001'
  _globals['_SETBASEKEYREQUEST'].fields_by_name['id']._loaded_options = None
  _globals['_SETBASEKEYREQUEST'].fields_by_name['id']._serialized_options = b'\272H\005r\003\260\001\001'
  _globals['_KEYACCESSSERVERREGISTRYSERVICE'].methods_by_name['ListKeyAccessServers']._loaded_options = None
  _globals['_KEYACCESSSERVERREGISTRYSERVICE'].methods_by_name['ListKeyAccessServers']._serialized_options = b'\220\002\001\202\323\344\223\002\025\022\023/key-access-servers'
  _globals['_KEYACCESSSERVERREGISTRYSERVICE'].methods_by_name['GetKeyAccessServer']._loaded_options = None
  _globals['_KEYACCESSSERVERREGISTRYSERVICE'].methods_by_name['GetKeyAccessServer']._serialized_options = b'\220\002\001'
  _globals['_KEYACCESSSERVERREGISTRYSERVICE'].methods_by_name['ListKeyAccessServerGrants']._loaded_options = None
  _globals['_KEYACCESSSERVERREGISTRYSERVICE'].methods_by_name['ListKeyAccessServerGrants']._serialized_options = b'\210\002\001\220\002\001'
  _globals['_GETKEYACCESSSERVERREQUEST']._serialized_start=202
  _globals['_GETKEYACCESSSERVERREQUEST']._serialized_end=686
  _globals['_GETKEYACCESSSERVERRESPONSE']._serialized_start=688
  _globals['_GETKEYACCESSSERVERRESPONSE']._serialized_end=785
  _globals['_LISTKEYACCESSSERVERSREQUEST']._serialized_start=787
  _globals['_LISTKEYACCESSSERVERSREQUEST']._serialized_end=869
  _globals['_LISTKEYACCESSSERVERSRESPONSE']._serialized_start=872
  _globals['_LISTKEYACCESSSERVERSRESPONSE']._serialized_end=1027
  _globals['_CREATEKEYACCESSSERVERREQUEST']._serialized_start=1030
  _globals['_CREATEKEYACCESSSERVERREQUEST']._serialized_end=1819
  _globals['_CREATEKEYACCESSSERVERRESPONSE']._serialized_start=1821
  _globals['_CREATEKEYACCESSSERVERRESPONSE']._serialized_end=1921
  _globals['_UPDATEKEYACCESSSERVERREQUEST']._serialized_start=1924
  _globals['_UPDATEKEYACCESSSERVERREQUEST']._serialized_end=2857
  _globals['_UPDATEKEYACCESSSERVERRESPONSE']._serialized_start=2859
  _globals['_UPDATEKEYACCESSSERVERRESPONSE']._serialized_end=2959
  _globals['_DELETEKEYACCESSSERVERREQUEST']._serialized_start=2961
  _globals['_DELETEKEYACCESSSERVERREQUEST']._serialized_end=3017
  _globals['_DELETEKEYACCESSSERVERRESPONSE']._serialized_start=3019
  _globals['_DELETEKEYACCESSSERVERRESPONSE']._serialized_end=3119
  _globals['_GRANTEDPOLICYOBJECT']._serialized_start=3121
  _globals['_GRANTEDPOLICYOBJECT']._serialized_end=3176
  _globals['_KEYACCESSSERVERGRANTS']._serialized_start=3179
  _globals['_KEYACCESSSERVERGRANTS']._serialized_end=3515
  _globals['_CREATEPUBLICKEYREQUEST']._serialized_start=3518
  _globals['_CREATEPUBLICKEYREQUEST']._serialized_end=3676
  _globals['_CREATEPUBLICKEYRESPONSE']._serialized_start=3678
  _globals['_CREATEPUBLICKEYRESPONSE']._serialized_end=3734
  _globals['_GETPUBLICKEYREQUEST']._serialized_start=3736
  _globals['_GETPUBLICKEYREQUEST']._serialized_end=3799
  _globals['_GETPUBLICKEYRESPONSE']._serialized_start=3801
  _globals['_GETPUBLICKEYRESPONSE']._serialized_end=3854
  _globals['_LISTPUBLICKEYSREQUEST']._serialized_start=3857
  _globals['_LISTPUBLICKEYSREQUEST']._serialized_end=4059
  _globals['_LISTPUBLICKEYSRESPONSE']._serialized_start=4061
  _globals['_LISTPUBLICKEYSRESPONSE']._serialized_end=4172
  _globals['_LISTPUBLICKEYMAPPINGREQUEST']._serialized_start=4175
  _globals['_LISTPUBLICKEYMAPPINGREQUEST']._serialized_end=4432
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE']._serialized_start=4435
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE']._serialized_end=5193
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE_PUBLICKEYMAPPING']._serialized_start=4637
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE_PUBLICKEYMAPPING']._serialized_end=4823
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE_PUBLICKEY']._serialized_start=4826
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE_PUBLICKEY']._serialized_end=5144
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE_ASSOCIATION']._serialized_start=5146
  _globals['_LISTPUBLICKEYMAPPINGRESPONSE_ASSOCIATION']._serialized_end=5193
  _globals['_UPDATEPUBLICKEYREQUEST']._serialized_start=5196
  _globals['_UPDATEPUBLICKEYREQUEST']._serialized_end=5385
  _globals['_UPDATEPUBLICKEYRESPONSE']._serialized_start=5387
  _globals['_UPDATEPUBLICKEYRESPONSE']._serialized_end=5443
  _globals['_DEACTIVATEPUBLICKEYREQUEST']._serialized_start=5445
  _globals['_DEACTIVATEPUBLICKEYREQUEST']._serialized_end=5499
  _globals['_DEACTIVATEPUBLICKEYRESPONSE']._serialized_start=5501
  _globals['_DEACTIVATEPUBLICKEYRESPONSE']._serialized_end=5561
  _globals['_ACTIVATEPUBLICKEYREQUEST']._serialized_start=5563
  _globals['_ACTIVATEPUBLICKEYREQUEST']._serialized_end=5615
  _globals['_ACTIVATEPUBLICKEYRESPONSE']._serialized_start=5617
  _globals['_ACTIVATEPUBLICKEYRESPONSE']._serialized_end=5675
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST']._serialized_start=5678
  _globals['_LISTKEYACCESSSERVERGRANTSREQUEST']._serialized_end=6611
  _globals['_LISTKEYACCESSSERVERGRANTSRESPONSE']._serialized_start=6614
  _globals['_LISTKEYACCESSSERVERGRANTSRESPONSE']._serialized_end=6778
  _globals['_CREATEKEYREQUEST']._serialized_start=6781
  _globals['_CREATEKEYREQUEST']._serialized_end=8366
  _globals['_CREATEKEYRESPONSE']._serialized_start=8368
  _globals['_CREATEKEYRESPONSE']._serialized_end=8428
  _globals['_GETKEYREQUEST']._serialized_start=8430
  _globals['_GETKEYREQUEST']._serialized_end=8552
  _globals['_GETKEYRESPONSE']._serialized_start=8554
  _globals['_GETKEYRESPONSE']._serialized_end=8611
  _globals['_LISTKEYSREQUEST']._serialized_start=8614
  _globals['_LISTKEYSREQUEST']._serialized_end=8977
  _globals['_LISTKEYSRESPONSE']._serialized_start=8979
  _globals['_LISTKEYSRESPONSE']._serialized_end=9094
  _globals['_UPDATEKEYREQUEST']._serialized_start=9097
  _globals['_UPDATEKEYREQUEST']._serialized_end=9487
  _globals['_UPDATEKEYRESPONSE']._serialized_start=9489
  _globals['_UPDATEKEYRESPONSE']._serialized_end=9549
  _globals['_KASKEYIDENTIFIER']._serialized_start=9552
  _globals['_KASKEYIDENTIFIER']._serialized_end=9716
  _globals['_ROTATEKEYREQUEST']._serialized_start=9719
  _globals['_ROTATEKEYREQUEST']._serialized_end=11609
  _globals['_ROTATEKEYREQUEST_NEWKEY']._serialized_start=9896
  _globals['_ROTATEKEYREQUEST_NEWKEY']._serialized_end=10484
  _globals['_CHANGEMAPPINGS']._serialized_start=11611
  _globals['_CHANGEMAPPINGS']._serialized_end=11661
  _globals['_ROTATEDRESOURCES']._serialized_start=11664
  _globals['_ROTATEDRESOURCES']._serialized_end=12019
  _globals['_ROTATEKEYRESPONSE']._serialized_start=12022
  _globals['_ROTATEKEYRESPONSE']._serialized_end=12165
  _globals['_SETBASEKEYREQUEST']._serialized_start=12167
  _globals['_SETBASEKEYREQUEST']._serialized_end=12293
  _globals['_GETBASEKEYREQUEST']._serialized_start=12295
  _globals['_GETBASEKEYREQUEST']._serialized_end=12314
  _globals['_GETBASEKEYRESPONSE']._serialized_start=12316
  _globals['_GETBASEKEYRESPONSE']._serialized_end=12385
  _globals['_SETBASEKEYRESPONSE']._serialized_start=12388
  _globals['_SETBASEKEYRESPONSE']._serialized_end=12530
  _globals['_KEYACCESSSERVERREGISTRYSERVICE']._serialized_start=12533
  _globals['_KEYACCESSSERVERREGISTRYSERVICE']._serialized_end=14012
# @@protoc_insertion_point(module_scope)
