# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from authorization import authorization_pb2 as authorization_dot_authorization__pb2


class AuthorizationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDecisions = channel.unary_unary(
                '/authorization.AuthorizationService/GetDecisions',
                request_serializer=authorization_dot_authorization__pb2.GetDecisionsRequest.SerializeToString,
                response_deserializer=authorization_dot_authorization__pb2.GetDecisionsResponse.FromString,
                _registered_method=True)
        self.GetDecisionsByToken = channel.unary_unary(
                '/authorization.AuthorizationService/GetDecisionsByToken',
                request_serializer=authorization_dot_authorization__pb2.GetDecisionsByTokenRequest.SerializeToString,
                response_deserializer=authorization_dot_authorization__pb2.GetDecisionsByTokenResponse.FromString,
                _registered_method=True)
        self.GetEntitlements = channel.unary_unary(
                '/authorization.AuthorizationService/GetEntitlements',
                request_serializer=authorization_dot_authorization__pb2.GetEntitlementsRequest.SerializeToString,
                response_deserializer=authorization_dot_authorization__pb2.GetEntitlementsResponse.FromString,
                _registered_method=True)


class AuthorizationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDecisions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDecisionsByToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntitlements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthorizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDecisions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDecisions,
                    request_deserializer=authorization_dot_authorization__pb2.GetDecisionsRequest.FromString,
                    response_serializer=authorization_dot_authorization__pb2.GetDecisionsResponse.SerializeToString,
            ),
            'GetDecisionsByToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDecisionsByToken,
                    request_deserializer=authorization_dot_authorization__pb2.GetDecisionsByTokenRequest.FromString,
                    response_serializer=authorization_dot_authorization__pb2.GetDecisionsByTokenResponse.SerializeToString,
            ),
            'GetEntitlements': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntitlements,
                    request_deserializer=authorization_dot_authorization__pb2.GetEntitlementsRequest.FromString,
                    response_serializer=authorization_dot_authorization__pb2.GetEntitlementsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'authorization.AuthorizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('authorization.AuthorizationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthorizationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDecisions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/authorization.AuthorizationService/GetDecisions',
            authorization_dot_authorization__pb2.GetDecisionsRequest.SerializeToString,
            authorization_dot_authorization__pb2.GetDecisionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDecisionsByToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/authorization.AuthorizationService/GetDecisionsByToken',
            authorization_dot_authorization__pb2.GetDecisionsByTokenRequest.SerializeToString,
            authorization_dot_authorization__pb2.GetDecisionsByTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEntitlements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/authorization.AuthorizationService/GetEntitlements',
            authorization_dot_authorization__pb2.GetEntitlementsRequest.SerializeToString,
            authorization_dot_authorization__pb2.GetEntitlementsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
