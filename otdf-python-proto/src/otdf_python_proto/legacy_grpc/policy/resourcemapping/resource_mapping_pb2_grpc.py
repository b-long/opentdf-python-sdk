# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from policy.resourcemapping import resource_mapping_pb2 as policy_dot_resourcemapping_dot_resource__mapping__pb2


class ResourceMappingServiceStub(object):
    """
    Resource Mapping Groups
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListResourceMappingGroups = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/ListResourceMappingGroups',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingGroupsRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingGroupsResponse.FromString,
                _registered_method=True)
        self.GetResourceMappingGroup = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/GetResourceMappingGroup',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingGroupRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingGroupResponse.FromString,
                _registered_method=True)
        self.CreateResourceMappingGroup = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/CreateResourceMappingGroup',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingGroupRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingGroupResponse.FromString,
                _registered_method=True)
        self.UpdateResourceMappingGroup = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/UpdateResourceMappingGroup',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingGroupRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingGroupResponse.FromString,
                _registered_method=True)
        self.DeleteResourceMappingGroup = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/DeleteResourceMappingGroup',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingGroupRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingGroupResponse.FromString,
                _registered_method=True)
        self.ListResourceMappings = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/ListResourceMappings',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsResponse.FromString,
                _registered_method=True)
        self.ListResourceMappingsByGroupFqns = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/ListResourceMappingsByGroupFqns',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsByGroupFqnsRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsByGroupFqnsResponse.FromString,
                _registered_method=True)
        self.GetResourceMapping = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/GetResourceMapping',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingResponse.FromString,
                _registered_method=True)
        self.CreateResourceMapping = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/CreateResourceMapping',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingResponse.FromString,
                _registered_method=True)
        self.UpdateResourceMapping = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/UpdateResourceMapping',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingResponse.FromString,
                _registered_method=True)
        self.DeleteResourceMapping = channel.unary_unary(
                '/policy.resourcemapping.ResourceMappingService/DeleteResourceMapping',
                request_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingRequest.SerializeToString,
                response_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingResponse.FromString,
                _registered_method=True)


class ResourceMappingServiceServicer(object):
    """
    Resource Mapping Groups
    """

    def ListResourceMappingGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResourceMappingGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateResourceMappingGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateResourceMappingGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteResourceMappingGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResourceMappings(self, request, context):
        """
        Resource Mappings

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResourceMappingsByGroupFqns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResourceMapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateResourceMapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateResourceMapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteResourceMapping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceMappingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListResourceMappingGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResourceMappingGroups,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingGroupsRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingGroupsResponse.SerializeToString,
            ),
            'GetResourceMappingGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResourceMappingGroup,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingGroupRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingGroupResponse.SerializeToString,
            ),
            'CreateResourceMappingGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateResourceMappingGroup,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingGroupRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingGroupResponse.SerializeToString,
            ),
            'UpdateResourceMappingGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateResourceMappingGroup,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingGroupRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingGroupResponse.SerializeToString,
            ),
            'DeleteResourceMappingGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteResourceMappingGroup,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingGroupRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingGroupResponse.SerializeToString,
            ),
            'ListResourceMappings': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResourceMappings,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsResponse.SerializeToString,
            ),
            'ListResourceMappingsByGroupFqns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResourceMappingsByGroupFqns,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsByGroupFqnsRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsByGroupFqnsResponse.SerializeToString,
            ),
            'GetResourceMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResourceMapping,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingResponse.SerializeToString,
            ),
            'CreateResourceMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateResourceMapping,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingResponse.SerializeToString,
            ),
            'UpdateResourceMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateResourceMapping,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingResponse.SerializeToString,
            ),
            'DeleteResourceMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteResourceMapping,
                    request_deserializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingRequest.FromString,
                    response_serializer=policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'policy.resourcemapping.ResourceMappingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('policy.resourcemapping.ResourceMappingService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ResourceMappingService(object):
    """
    Resource Mapping Groups
    """

    @staticmethod
    def ListResourceMappingGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/ListResourceMappingGroups',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingGroupsRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingGroupsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetResourceMappingGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/GetResourceMappingGroup',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingGroupRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateResourceMappingGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/CreateResourceMappingGroup',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingGroupRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateResourceMappingGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/UpdateResourceMappingGroup',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingGroupRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteResourceMappingGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/DeleteResourceMappingGroup',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingGroupRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListResourceMappings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/ListResourceMappings',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListResourceMappingsByGroupFqns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/ListResourceMappingsByGroupFqns',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsByGroupFqnsRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.ListResourceMappingsByGroupFqnsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetResourceMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/GetResourceMapping',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.GetResourceMappingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateResourceMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/CreateResourceMapping',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.CreateResourceMappingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateResourceMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/UpdateResourceMapping',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.UpdateResourceMappingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteResourceMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.resourcemapping.ResourceMappingService/DeleteResourceMapping',
            policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingRequest.SerializeToString,
            policy_dot_resourcemapping_dot_resource__mapping__pb2.DeleteResourceMappingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
