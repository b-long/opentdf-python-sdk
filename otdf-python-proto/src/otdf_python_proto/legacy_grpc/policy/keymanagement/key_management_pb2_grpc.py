# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from policy.keymanagement import key_management_pb2 as policy_dot_keymanagement_dot_key__management__pb2


class KeyManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProviderConfig = channel.unary_unary(
                '/policy.keymanagement.KeyManagementService/CreateProviderConfig',
                request_serializer=policy_dot_keymanagement_dot_key__management__pb2.CreateProviderConfigRequest.SerializeToString,
                response_deserializer=policy_dot_keymanagement_dot_key__management__pb2.CreateProviderConfigResponse.FromString,
                _registered_method=True)
        self.GetProviderConfig = channel.unary_unary(
                '/policy.keymanagement.KeyManagementService/GetProviderConfig',
                request_serializer=policy_dot_keymanagement_dot_key__management__pb2.GetProviderConfigRequest.SerializeToString,
                response_deserializer=policy_dot_keymanagement_dot_key__management__pb2.GetProviderConfigResponse.FromString,
                _registered_method=True)
        self.ListProviderConfigs = channel.unary_unary(
                '/policy.keymanagement.KeyManagementService/ListProviderConfigs',
                request_serializer=policy_dot_keymanagement_dot_key__management__pb2.ListProviderConfigsRequest.SerializeToString,
                response_deserializer=policy_dot_keymanagement_dot_key__management__pb2.ListProviderConfigsResponse.FromString,
                _registered_method=True)
        self.UpdateProviderConfig = channel.unary_unary(
                '/policy.keymanagement.KeyManagementService/UpdateProviderConfig',
                request_serializer=policy_dot_keymanagement_dot_key__management__pb2.UpdateProviderConfigRequest.SerializeToString,
                response_deserializer=policy_dot_keymanagement_dot_key__management__pb2.UpdateProviderConfigResponse.FromString,
                _registered_method=True)
        self.DeleteProviderConfig = channel.unary_unary(
                '/policy.keymanagement.KeyManagementService/DeleteProviderConfig',
                request_serializer=policy_dot_keymanagement_dot_key__management__pb2.DeleteProviderConfigRequest.SerializeToString,
                response_deserializer=policy_dot_keymanagement_dot_key__management__pb2.DeleteProviderConfigResponse.FromString,
                _registered_method=True)


class KeyManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateProviderConfig(self, request, context):
        """Key Management
        Provider Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProviderConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProviderConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProviderConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProviderConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProviderConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProviderConfig,
                    request_deserializer=policy_dot_keymanagement_dot_key__management__pb2.CreateProviderConfigRequest.FromString,
                    response_serializer=policy_dot_keymanagement_dot_key__management__pb2.CreateProviderConfigResponse.SerializeToString,
            ),
            'GetProviderConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProviderConfig,
                    request_deserializer=policy_dot_keymanagement_dot_key__management__pb2.GetProviderConfigRequest.FromString,
                    response_serializer=policy_dot_keymanagement_dot_key__management__pb2.GetProviderConfigResponse.SerializeToString,
            ),
            'ListProviderConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProviderConfigs,
                    request_deserializer=policy_dot_keymanagement_dot_key__management__pb2.ListProviderConfigsRequest.FromString,
                    response_serializer=policy_dot_keymanagement_dot_key__management__pb2.ListProviderConfigsResponse.SerializeToString,
            ),
            'UpdateProviderConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProviderConfig,
                    request_deserializer=policy_dot_keymanagement_dot_key__management__pb2.UpdateProviderConfigRequest.FromString,
                    response_serializer=policy_dot_keymanagement_dot_key__management__pb2.UpdateProviderConfigResponse.SerializeToString,
            ),
            'DeleteProviderConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProviderConfig,
                    request_deserializer=policy_dot_keymanagement_dot_key__management__pb2.DeleteProviderConfigRequest.FromString,
                    response_serializer=policy_dot_keymanagement_dot_key__management__pb2.DeleteProviderConfigResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'policy.keymanagement.KeyManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('policy.keymanagement.KeyManagementService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KeyManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateProviderConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.keymanagement.KeyManagementService/CreateProviderConfig',
            policy_dot_keymanagement_dot_key__management__pb2.CreateProviderConfigRequest.SerializeToString,
            policy_dot_keymanagement_dot_key__management__pb2.CreateProviderConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProviderConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.keymanagement.KeyManagementService/GetProviderConfig',
            policy_dot_keymanagement_dot_key__management__pb2.GetProviderConfigRequest.SerializeToString,
            policy_dot_keymanagement_dot_key__management__pb2.GetProviderConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProviderConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.keymanagement.KeyManagementService/ListProviderConfigs',
            policy_dot_keymanagement_dot_key__management__pb2.ListProviderConfigsRequest.SerializeToString,
            policy_dot_keymanagement_dot_key__management__pb2.ListProviderConfigsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProviderConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.keymanagement.KeyManagementService/UpdateProviderConfig',
            policy_dot_keymanagement_dot_key__management__pb2.UpdateProviderConfigRequest.SerializeToString,
            policy_dot_keymanagement_dot_key__management__pb2.UpdateProviderConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProviderConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/policy.keymanagement.KeyManagementService/DeleteProviderConfig',
            policy_dot_keymanagement_dot_key__management__pb2.DeleteProviderConfigRequest.SerializeToString,
            policy_dot_keymanagement_dot_key__management__pb2.DeleteProviderConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
