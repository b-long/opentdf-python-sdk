# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from kas import kas_pb2 as kas_dot_kas__pb2


class AccessServiceStub(object):
    """Get app info from the root path
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PublicKey = channel.unary_unary(
                '/kas.AccessService/PublicKey',
                request_serializer=kas_dot_kas__pb2.PublicKeyRequest.SerializeToString,
                response_deserializer=kas_dot_kas__pb2.PublicKeyResponse.FromString,
                _registered_method=True)
        self.LegacyPublicKey = channel.unary_unary(
                '/kas.AccessService/LegacyPublicKey',
                request_serializer=kas_dot_kas__pb2.LegacyPublicKeyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                _registered_method=True)
        self.Rewrap = channel.unary_unary(
                '/kas.AccessService/Rewrap',
                request_serializer=kas_dot_kas__pb2.RewrapRequest.SerializeToString,
                response_deserializer=kas_dot_kas__pb2.RewrapResponse.FromString,
                _registered_method=True)


class AccessServiceServicer(object):
    """Get app info from the root path
    """

    def PublicKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LegacyPublicKey(self, request, context):
        """Endpoint intended for gRPC Gateway's REST endpoint to provide v1 compatibility with older TDF clients

        This endpoint is not recommended for use in new applications, prefer the v2 endpoint ('PublicKey') instead.

        buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rewrap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccessServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.PublicKey,
                    request_deserializer=kas_dot_kas__pb2.PublicKeyRequest.FromString,
                    response_serializer=kas_dot_kas__pb2.PublicKeyResponse.SerializeToString,
            ),
            'LegacyPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.LegacyPublicKey,
                    request_deserializer=kas_dot_kas__pb2.LegacyPublicKeyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            ),
            'Rewrap': grpc.unary_unary_rpc_method_handler(
                    servicer.Rewrap,
                    request_deserializer=kas_dot_kas__pb2.RewrapRequest.FromString,
                    response_serializer=kas_dot_kas__pb2.RewrapResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kas.AccessService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kas.AccessService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AccessService(object):
    """Get app info from the root path
    """

    @staticmethod
    def PublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kas.AccessService/PublicKey',
            kas_dot_kas__pb2.PublicKeyRequest.SerializeToString,
            kas_dot_kas__pb2.PublicKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LegacyPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kas.AccessService/LegacyPublicKey',
            kas_dot_kas__pb2.LegacyPublicKeyRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Rewrap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kas.AccessService/Rewrap',
            kas_dot_kas__pb2.RewrapRequest.SerializeToString,
            kas_dot_kas__pb2.RewrapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
