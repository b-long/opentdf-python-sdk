# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from entityresolution import entity_resolution_pb2 as entityresolution_dot_entity__resolution__pb2


class EntityResolutionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ResolveEntities = channel.unary_unary(
                '/entityresolution.EntityResolutionService/ResolveEntities',
                request_serializer=entityresolution_dot_entity__resolution__pb2.ResolveEntitiesRequest.SerializeToString,
                response_deserializer=entityresolution_dot_entity__resolution__pb2.ResolveEntitiesResponse.FromString,
                _registered_method=True)
        self.CreateEntityChainFromJwt = channel.unary_unary(
                '/entityresolution.EntityResolutionService/CreateEntityChainFromJwt',
                request_serializer=entityresolution_dot_entity__resolution__pb2.CreateEntityChainFromJwtRequest.SerializeToString,
                response_deserializer=entityresolution_dot_entity__resolution__pb2.CreateEntityChainFromJwtResponse.FromString,
                _registered_method=True)


class EntityResolutionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ResolveEntities(self, request, context):
        """Deprecated: use v2 ResolveEntities instead
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEntityChainFromJwt(self, request, context):
        """Deprecated: use v2 CreateEntityChainsFromTokens instead
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EntityResolutionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ResolveEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveEntities,
                    request_deserializer=entityresolution_dot_entity__resolution__pb2.ResolveEntitiesRequest.FromString,
                    response_serializer=entityresolution_dot_entity__resolution__pb2.ResolveEntitiesResponse.SerializeToString,
            ),
            'CreateEntityChainFromJwt': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEntityChainFromJwt,
                    request_deserializer=entityresolution_dot_entity__resolution__pb2.CreateEntityChainFromJwtRequest.FromString,
                    response_serializer=entityresolution_dot_entity__resolution__pb2.CreateEntityChainFromJwtResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'entityresolution.EntityResolutionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('entityresolution.EntityResolutionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EntityResolutionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ResolveEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/entityresolution.EntityResolutionService/ResolveEntities',
            entityresolution_dot_entity__resolution__pb2.ResolveEntitiesRequest.SerializeToString,
            entityresolution_dot_entity__resolution__pb2.ResolveEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEntityChainFromJwt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/entityresolution.EntityResolutionService/CreateEntityChainFromJwt',
            entityresolution_dot_entity__resolution__pb2.CreateEntityChainFromJwtRequest.SerializeToString,
            entityresolution_dot_entity__resolution__pb2.CreateEntityChainFromJwtResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
